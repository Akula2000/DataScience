# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QerbUkb_fYHBqFJQU5T4QxhrNafN_Lx1
"""

#panda questions

import pandas as pd
import numpy as np

df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
#1From df filter the 'Manufacturer', 'Model' and 'Type' for every 20th row starting from 1st (row 0)

filtered_df = df.iloc[::20][['Manufacturer', 'Model', 'Type']]

print(filtered_df)

#2. Replace missing values in Min.Price and Max.Price columns with their respective mean.
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')

min_price_mean = df['Min.Price'].mean()
max_price_mean = df['Max.Price'].mean()

df['Min.Price'].fillna(min_price_mean, inplace=True)
df['Max.Price'].fillna(max_price_mean, inplace=True)

print(df)

#3. How to get the rows of a dataframe with row sum > 100?
df = pd.DataFrame(np.random.randint(10, 40, 60).reshape(-1, 4))

result = df[df.sum(axis=1) > 100]

print(result)

#Numpy Practice Questions
#1. Define two custom numpy arrays, say A and B. Generate two new numpy arrays by stacking A and B vertically and horizontally.
A = np.array([1,3,7,9,10,5,8])
B = np.array([4,5,6,2,8,12,13])

vertical_stack = np.vstack((A, B))

horizontal_stack = np.hstack((A, B))

print("Vertical Stack:")
print(vertical_stack)

print("\nHorizontal Stack:")
print(horizontal_stack)

#2. Find common elements between A and B. [Hint : Intersection of two sets]
common_elements = np.intersect1d(A, B)

print("Common Elements:")
print(common_elements)

#3. Extract all numbers from A which are within a specific range. eg between 5 and 10. [Hint: np.where() might be useful or boolean masks]
lower_bound = 5
upper_bound = 10


mask = (A >= lower_bound) & (A <= upper_bound)


numbers_within_range = A[mask]

print("Numbers within the range:")
print(numbers_within_range)

#4. Filter the rows of iris_2d that has petallength (3rd column) > 1.5 and sepallength (1st column) < 5.0
	# url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
	# iris_2d = np.genfromtxt(url, delimiter=',', dtype='float', usecols=[0,1,2,3])

url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
iris_2d = np.genfromtxt(url, delimiter=',', dtype='float', usecols=[0, 1, 2, 3])


mask = (iris_2d[:, 2] > 1.5) & (iris_2d[:, 0] < 5.0)


filtered_rows = iris_2d[mask]

print("Filtered Rows:")
print(filtered_rows)